<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>第五次记录 </title>
    <link href="/2020/03/17/%E7%AC%AC%E4%BA%94%E6%AC%A1%E8%AE%B0%E5%BD%95%20/"/>
    <url>/2020/03/17/%E7%AC%AC%E4%BA%94%E6%AC%A1%E8%AE%B0%E5%BD%95%20/</url>
    
    <content type="html"><![CDATA[<h2 id="题目考查点"><a href="#题目考查点" class="headerlink" title="题目考查点"></a>题目考查点</h2><p>1.php类型比较<br>2.如何做到变量原值不同但利用md5或sha1编码后结果相同</p><h2 id="涉及知识点"><a href="#涉及知识点" class="headerlink" title="涉及知识点"></a>涉及知识点</h2><p>1.php变量比较包含松散比较和严格比较。其中，松散比较指使用两个等号比较，只比较值，不比较类型。严格比较指用三个等号比较，除了比较值，也比较类型。详情可见<a href="https://www.runoob.com/php/php-types-comparisons.html" target="_blank" rel="noopener">php入门之类型比较</a><br>2.php中sha1()函数计算字符串的SHA-1散列，md5()函数则计算字符串的MD5散列。<br>3.经过MD5运算后结果为0的字符串，编码后需保证0e<strong>**</strong>的形式，换成数字意思为0乘10的n次方，故结果为0。例如240610708 和 QNKCDZO均符合，实际上符合的字符串很多，就不一一赘述了。<br>4.保证变量不同但SHA-1编码后相同，利用数组绕过的方法。因为md5和sha1对一个数组进行加密都将返回NULL，而NULL===NULL返回true。还有一些php黑魔法可见以下链接：<br><a href="https://blog.csdn.net/nzjdsds/article/details/82019297" target="_blank" rel="noopener">ctf中php总结</a><br><a href="https://blog.csdn.net/weixin_30539835/article/details/99669583" target="_blank" rel="noopener">php常见考点</a><br><a href="https://www.cnblogs.com/xishaonian/p/7628152.html" target="_blank" rel="noopener">php黑魔法总结</a></p><h2 id="做题步骤"><a href="#做题步骤" class="headerlink" title="做题步骤"></a>做题步骤</h2><p>1.观察所给代码，使用get请求。并且只要同时满足<code>md5($test)==‘0’</code><br><code>sha1($_GET[[‘name’])===sha1($_GET[‘password’])</code><br>以上两个条件即可。<br>2.在url后部添加<code>test=240610708&amp;name[]=1&amp;password[]=2</code>,可得到flag信息。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>第四次记录</title>
    <link href="/2020/03/16/%E7%AC%AC%E5%9B%9B%E6%AC%A1%E8%AE%B0%E5%BD%95/"/>
    <url>/2020/03/16/%E7%AC%AC%E5%9B%9B%E6%AC%A1%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h2 id="题目考查点"><a href="#题目考查点" class="headerlink" title="题目考查点"></a>题目考查点</h2><p>Sql手工注入   </p><h2 id="涉及知识点"><a href="#涉及知识点" class="headerlink" title="涉及知识点"></a>涉及知识点</h2><p>1.注入点寻找<br>2.判断字段长度<br>3.判断字段位置<br>4.查询数据库名、表名、表中的字段和字段信息 </p><h2 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h2><p>以下解题步骤主要参考了这两篇文章<a href="https://www.cnblogs.com/conquer-vv/p/11307682.html" target="_blank" rel="noopener">https://www.cnblogs.com/conquer-vv/p/11307682.html</a><br><a href="https://blog.csdn.net/qq_39353923/article/details/82901903" target="_blank" rel="noopener">https://blog.csdn.net/qq_39353923/article/details/82901903</a><br>说实话，我做这个题就是照着上面文章来的，搜sql手工注入结果找到了一个差不多的题，做出来这个题很是胜之不武，也没啥成就感。具体步骤如下：<br>1.找注入点，判断是否存在注入点常用套路是输入语句’、and 1=1或and 1=2,来判断网站是否存在注入点。尝试在正常数据后加上单引号，发现数据为空，加上注释符(注释符:#,–+ , //, – )后发现依旧可以正常输出,那么可以判断存在注入点。<br>2.用order by 来判断字段长度。<br>3.使用union或者union all将SQL语句联合起来判断字段位置，并可以查询数据库名、表名、表中的字段和字段信息。最终在字段信息中找到flag</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>第三次记录</title>
    <link href="/2020/03/14/%E7%AC%AC%E4%B8%89%E6%AC%A1%E8%AE%B0%E5%BD%95/"/>
    <url>/2020/03/14/%E7%AC%AC%E4%B8%89%E6%AC%A1%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h2 id="题目考查点"><a href="#题目考查点" class="headerlink" title="题目考查点"></a>题目考查点</h2><p>1.对session对象的应用，以保证会话信息的一致性。<br>2.如何正确解析和提取HTML／XML数据<br>3.base64正确解码方式<br>4.对SVG图像的处理 </p><h2 id="涉及知识点"><a href="#涉及知识点" class="headerlink" title="涉及知识点"></a>涉及知识点</h2><p>1.创建一个session对象来发请求，那么每次发请求用的都是这个会话对象，能够保存之前的会话信息，以保证会话信息的一致性。<br>2.BeautifulSoup支持Python标准库中的HTML解析器，借助它可以实现对html/xml语言的解析与提取，本题使用方法为BeautifulSoup(markup,”html.parser”)。具体标签内容的提取方法可参照 <a href="http://www.jsphp.net/python/show-24-214-1.html" target="_blank" rel="noopener">http://www.jsphp.net/python/show-24-214-1.html</a><br>3.SVG为可缩放矢量图形，并使用XML格式来定义图像。<text>元素用于定义文本，其中x决定此文本在横轴的位置，y决定纵轴的位置。具体介绍可见<a href="https://www.runoob.com/svg/svg-text.html" target="_blank" rel="noopener">https://www.runoob.com/svg/svg-text.html</a> </p><h2 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h2><p>1.首先查看网页源代码，观察到data:image/svg+xml;base64的字眼。<br>2.对img标签内描述图像的内容进行提取，并利用Base64解码。<br>3.解码得到svg描述的原图像，为了得到按图片从左到右顺序排序的字母序列，利用x的大小对标签内容进行排序。<br>4.得到验证码内容，利用get请求提交。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>第二次记录 </title>
    <link href="/2020/03/12/%E7%AC%AC%E4%BA%8C%E6%AC%A1%E8%AE%B0%E5%BD%95%20/"/>
    <url>/2020/03/12/%E7%AC%AC%E4%BA%8C%E6%AC%A1%E8%AE%B0%E5%BD%95%20/</url>
    
    <content type="html"><![CDATA[<p>做了一天多终于搞出来了，有点沮丧，自己需要学的有好多好多好多好多啊。<br>讲讲题目的思路吧，题目要求快速计算出一串式子的结果。提示说思考服务器怎样知道获得算式和提交答案的是一个人，然而我还是没啥思路，好吧，起码大方向给了。就看了提示里的Python requests库，又查了查相关资料，发现直接使用requests调用请求方法发送请求，每次都会创建一个新session（会话对象），没有之前请求的cookies信息。直接创建一个session对象来发请求，那么每次发请求用的都是这个会话对象，所有能够保存之前的会话信息（cookies数据），就能够保证获得算式和提交答案的都是一个人了。session其实是一个会话类，requests的所有请求方法，底层都是调用的这个类的对象。看来是要用python来写啊，这样就有初步的解决思路了。<br>但是咋计算那串式子呢？首先肯定得从所有的字符串中提取出来，那就用正则表达式匹配试试吧，尴尬的是我正则表达式忘得差不多了，只能再查资料学习了。正则表达式中，+号表示前面的字符必须至少出现一次，*号表示字符可以不出现，也可以出现一次或者多次，？号表示前面的字符最多只可以出现一次。特殊字符需要在钱买呢加上一个\进行转义。python的re模块有全部的正则表达式功能，其中，re.match函数从字符串的起始位置匹配一个模式，如果不是起始位置匹配成功的话，就返回none。re.search则是扫描整个字符串并返回第一个成功的匹配。两者都可以用group(num)或者group()匹配对象函数来获取匹配表达式。 一开始写的表达式一直匹配的不对，看了看应该是空格匹配有些不太对，怎么整也没整好，就偷懒把所有空格都替换了，so sad。好不容易把式子匹配完，并用eavl函数计算出结果。此时的我犯了一个很蠢的错误，想用post请求来提交数据（想当然的脑回路不要有啊），一直不对。纠结了好久终于想起来再去看看网页源代码，扫了一眼，顿时虎躯一震，想捶死自己的心都有了，原来是要用get请求啊！python里requests模块的get方法有几个常用的参数，url-接口地址，headers-定制请求头，params-传递测试接口要用的参数，用python中的字典形式（key:value）来进行参数的传递，timeout-设置接口连接的最大时间，超过该时间会出现超时错误。本题只使用了url和params两个参数。慢慢修改后，最后终于整出来了。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>第一次记录</title>
    <link href="/2020/03/11/%E7%AC%AC%E4%B8%80%E6%AC%A1%E8%AE%B0%E5%BD%95/"/>
    <url>/2020/03/11/%E7%AC%AC%E4%B8%80%E6%AC%A1%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<p>@<a href="这里写自定义目录标题">TOC</a></p><h2 id="第一次记录"><a href="#第一次记录" class="headerlink" title="第一次记录"></a>第一次记录</h2><p>最简单的白给题-simple HTTP method，测试的get和post的用法。<br>第一个是关于get的题目，就我而言第一眼看到是懵逼的，以前完全没接触过这种骨骼清奇的题目。看了看网页的源代码，意识到这可能和get变量用法有关，只要想办法把key值设置成areyousure应该就行了。于是就去查相关用法。查了之后发现get传输的变量直接显示在URL之中，所以直接在网址后面加上？key=areyousure就可以了。?代表URL的结尾与请求参数的开始。<br>另一个是关于Post的题目，但是用post方法的表单发送的信息，对任何人都是不可见的，自然也不会直接显示在URL中。害，这可咋整。遂又在网上找处理方法，找到了一个在线http接口测试工具，把网址，参数key，参数值areyousure输入，得到了flag。<br>两个最简单的白给题做下来，不禁对自己的菜鸡水平有了更深层次的理解。还是要多努力啊！</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>我的第一篇博客</title>
    <link href="/2020/03/09/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <url>/2020/03/09/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
